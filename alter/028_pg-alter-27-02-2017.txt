SET SCHEMA 'zafira';

DROP TABLE IF EXISTS VIEWS;
CREATE TABLE IF NOT EXISTS VIEWS (
  ID SERIAL,
  PROJECT_ID INT NULL,
  NAME VARCHAR(255) NOT NULL,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID),
  CONSTRAINT fk_VIEWS_PROJECTS1
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECTS (ID)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);
CREATE INDEX fk_VIEWS_PROJECTS1_idx ON VIEWS (PROJECT_ID);
CREATE UNIQUE INDEX VIEW_NAME_UNIQUE ON VIEWS (NAME);
CREATE TRIGGER update_timestamp_views BEFORE INSERT OR UPDATE ON VIEWS FOR EACH ROW EXECUTE PROCEDURE update_timestamp();


DROP TABLE IF EXISTS JOB_VIEWS;
CREATE TABLE IF NOT EXISTS JOB_VIEWS (
  ID SERIAL,
  JOB_ID INT NOT NULL,
  VIEW_ID INT NOT NULL,
  ENV VARCHAR(255) NOT NULL,
  POSITION INT NOT NULL DEFAULT 0,
  SIZE INT NOT NULL DEFAULT 1,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID),
  CONSTRAINT fk_JOB_VIEWS_JOBS1
    FOREIGN KEY (JOB_ID)
    REFERENCES JOBS (ID)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT fk_JOB_VIEWS_VIEWS1
    FOREIGN KEY (VIEW_ID)
    REFERENCES VIEWS(ID)
    ON DELETE CASCADE
    ON UPDATE NO ACTION);
CREATE INDEX fk_JOB_VIEWS_JOBS1_idx ON JOB_VIEWS (JOB_ID);
CREATE INDEX fk_JOB_VIEWS_VIEWS1_idx ON JOB_VIEWS (VIEW_ID);
CREATE UNIQUE INDEX JOB_ID_ENV_UNIQUE ON JOB_VIEWS (JOB_ID, ENV);
CREATE TRIGGER update_timestamp_job_views BEFORE INSERT OR UPDATE ON JOB_VIEWS FOR EACH ROW EXECUTE PROCEDURE update_timestamp();
