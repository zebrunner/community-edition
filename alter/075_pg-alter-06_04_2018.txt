set schema 'zafira';

select check_version(75);

DROP MATERIALIZED VIEW IF EXISTS TEST_CASE_HEALTH_VIEW;
CREATE MATERIALIZED VIEW TEST_CASE_HEALTH_VIEW AS (
SELECT ROW_NUMBER() OVER () AS ID,
    PROJECTS.NAME AS PROJECT,
    TEST_CASES.ID AS TEST_CASE_ID,
    TEST_CASES.TEST_METHOD AS TEST_METHOD_NAME,
    SUM( CASE WHEN TESTS.STATUS = 'PASSED' THEN 1 ELSE 0 END ) AS PASSED,
    SUM( CASE WHEN TESTS.STATUS = 'FAILED' AND TESTS.KNOWN_ISSUE=FALSE THEN 1 ELSE 0 END ) AS FAILED,
    SUM( CASE WHEN TESTS.STATUS = 'FAILED' AND TESTS.KNOWN_ISSUE=TRUE THEN 1 ELSE 0 END ) AS KNOWN_ISSUE,
    SUM( CASE WHEN TESTS.STATUS = 'SKIPPED' THEN 1 ELSE 0 END ) AS SKIPPED,
    SUM( CASE WHEN TESTS.STATUS = 'ABORTED' THEN 1 ELSE 0 END ) AS ABORTED,
    SUM( CASE WHEN TESTS.STATUS = 'IN_PROGRESS' THEN 1 ELSE 0 END ) AS IN_PROGRESS,
    COUNT(*) AS TOTAL,
    SUM(EXTRACT(EPOCH FROM(TESTS.FINISH_TIME - TESTS.START_TIME))/60)::BIGINT AS TOTAL_MINUTES,
    SUM(EXTRACT(EPOCH FROM(TESTS.FINISH_TIME - TESTS.START_TIME))/3600)::BIGINT AS TOTAL_HOURS,
    AVG(EXTRACT(EPOCH FROM(TESTS.FINISH_TIME - TESTS.START_TIME))) AS AVG_TIME,
    MIN(EXTRACT(EPOCH FROM(TESTS.FINISH_TIME - TESTS.START_TIME))) AS MIN_TIME,
    MAX(EXTRACT(EPOCH FROM(TESTS.FINISH_TIME - TESTS.START_TIME))) AS MAX_TIME,
    ROUND(SUM( CASE WHEN TESTS.STATUS = 'PASSED' THEN 1 ELSE 0 END )*100/COUNT(*)) AS STABILITY,
    ROUND(SUM( CASE WHEN TESTS.STATUS = 'FAILED' AND TESTS.KNOWN_ISSUE=FALSE THEN 1 ELSE 0 END )*100/COUNT(*)) AS FAILURE,
    ROUND(SUM( CASE WHEN TESTS.STATUS = 'FAILED' AND TESTS.KNOWN_ISSUE=TRUE THEN 1 ELSE 0 END )*100/COUNT(*)) AS KNOWN_FAILURE,
    ROUND(SUM( CASE WHEN TESTS.STATUS = 'SKIPPED' THEN 1 ELSE 0 END )*100/COUNT(*)) AS OMISSION,
    ROUND(SUM( CASE WHEN TESTS.STATUS = 'ABORTED' THEN 1 ELSE 0 END )*100/COUNT(*)) AS INTERRUPT,
    DATE_TRUNC('MONTH', TESTS.CREATED_AT) AS TESTED_AT
    FROM TESTS INNER JOIN
        TEST_CASES ON TESTS.TEST_CASE_ID = TEST_CASES.ID LEFT JOIN
        PROJECTS ON TEST_CASES.PROJECT_ID = PROJECTS.ID
    WHERE TESTS.FINISH_TIME IS NOT NULL
        AND TESTS.START_TIME IS NOT NULL
        AND TESTS.STATUS <> 'IN_PROGRESS'
        GROUP BY PROJECTS.ID, TEST_CASES.ID, TESTED_AT
  ORDER BY TESTED_AT
);

DROP INDEX IF EXISTS TEST_CASE_HEALTH_VIEW_INDEX;
CREATE UNIQUE INDEX TEST_CASE_HEALTH_VIEW_INDEX ON TEST_CASE_HEALTH_VIEW (ID);

DROP INDEX IF EXISTS TEST_CASE_HEALTH_VIEW_TEST_METHOD_NAME_INDEX;
CREATE INDEX TEST_CASE_HEALTH_VIEW_TEST_METHOD_NAME_INDEX ON TEST_CASE_HEALTH_VIEW (TEST_METHOD_NAME);

DROP INDEX IF EXISTS TEST_CASE_HEALTH_VIEW_STABILITY_INDEX;
CREATE INDEX TEST_CASE_HEALTH_VIEW_STABILITY_INDEX ON TEST_CASE_HEALTH_VIEW (STABILITY);

DROP INDEX IF EXISTS TEST_CASE_HEALTH_VIEW_TESTED_AT_INDEX;
CREATE INDEX TEST_CASE_HEALTH_VIEW_TESTED_AT_INDEX ON TEST_CASE_HEALTH_VIEW (TESTED_AT);

SELECT cron.schedule ('0 7 * * *', $$REFRESH MATERIALIZED VIEW ZAFIRA.TEST_CASE_HEALTH_VIEW$$);

select add_version(75);